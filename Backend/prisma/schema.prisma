// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Company owns FAQs and Sessions
model Company {
  id        String     @id @default(cuid())
  name      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  faqs      FAQ[]
  sessions  Session[]
}

// Each support session belongs to a company
model Session {
  id           String   @id @default(cuid())
  user         String
  status       String   @default("active") // "active" | "escalated" | "closed"
  escalationReason String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  companyId    String
  company      Company  @relation(fields: [companyId], references: [id])
  messages     Message[]
  summary      String?
}


// Each message belongs to a session
model Message {
  id         String    @id @default(cuid())
  sessionId  String
  sender     String     // "user" | "orion" | "system"
  text       String
  confidence Float?     // optional, if you store model confidence
  createdAt  DateTime   @default(now())
  session    Session    @relation(fields: [sessionId], references: [id])
}

// FAQs linked to companies (knowledge base per company)
model FAQ {
  id          String   @id @default(cuid())
  companyId   String
  company     Company  @relation(fields: [companyId], references: [id])
  question    String
  answer      String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  embedding   Float[]  // optional for vector search or RAG
}
