/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoIndexRouteImport } from './routes/demo/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as ChatIndexRouteImport } from './routes/chat/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'
import { Route as DashboardSetupRouteImport } from './routes/dashboard/setup'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as DashboardFaqsRouteImport } from './routes/dashboard/faqs'
import { Route as DashboardEscalationsRouteImport } from './routes/dashboard/escalations'
import { Route as DashboardAnalyticsRouteImport } from './routes/dashboard/analytics'
import { Route as DashboardConversationsIndexRouteImport } from './routes/dashboard/conversations/index'
import { Route as DashboardConversationsIdRouteImport } from './routes/dashboard/conversations/$id'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoIndexRoute = DemoIndexRouteImport.update({
  id: '/demo/',
  path: '/demo/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSetupRoute = DashboardSetupRouteImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardFaqsRoute = DashboardFaqsRouteImport.update({
  id: '/faqs',
  path: '/faqs',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardEscalationsRoute = DashboardEscalationsRouteImport.update({
  id: '/escalations',
  path: '/escalations',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAnalyticsRoute = DashboardAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardConversationsIndexRoute =
  DashboardConversationsIndexRouteImport.update({
    id: '/conversations/',
    path: '/conversations/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardConversationsIdRoute =
  DashboardConversationsIdRouteImport.update({
    id: '/conversations/$id',
    path: '/conversations/$id',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/escalations': typeof DashboardEscalationsRoute
  '/dashboard/faqs': typeof DashboardFaqsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/setup': typeof DashboardSetupRoute
  '/about': typeof AboutIndexRoute
  '/chat': typeof ChatIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/demo': typeof DemoIndexRoute
  '/dashboard/conversations/$id': typeof DashboardConversationsIdRoute
  '/dashboard/conversations': typeof DashboardConversationsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/escalations': typeof DashboardEscalationsRoute
  '/dashboard/faqs': typeof DashboardFaqsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/setup': typeof DashboardSetupRoute
  '/about': typeof AboutIndexRoute
  '/chat': typeof ChatIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/demo': typeof DemoIndexRoute
  '/dashboard/conversations/$id': typeof DashboardConversationsIdRoute
  '/dashboard/conversations': typeof DashboardConversationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/escalations': typeof DashboardEscalationsRoute
  '/dashboard/faqs': typeof DashboardFaqsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/setup': typeof DashboardSetupRoute
  '/about/': typeof AboutIndexRoute
  '/chat/': typeof ChatIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/demo/': typeof DemoIndexRoute
  '/dashboard/conversations/$id': typeof DashboardConversationsIdRoute
  '/dashboard/conversations/': typeof DashboardConversationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/analytics'
    | '/dashboard/escalations'
    | '/dashboard/faqs'
    | '/dashboard/settings'
    | '/dashboard/setup'
    | '/about'
    | '/chat'
    | '/dashboard/'
    | '/demo'
    | '/dashboard/conversations/$id'
    | '/dashboard/conversations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard/analytics'
    | '/dashboard/escalations'
    | '/dashboard/faqs'
    | '/dashboard/settings'
    | '/dashboard/setup'
    | '/about'
    | '/chat'
    | '/dashboard'
    | '/demo'
    | '/dashboard/conversations/$id'
    | '/dashboard/conversations'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/analytics'
    | '/dashboard/escalations'
    | '/dashboard/faqs'
    | '/dashboard/settings'
    | '/dashboard/setup'
    | '/about/'
    | '/chat/'
    | '/dashboard/'
    | '/demo/'
    | '/dashboard/conversations/$id'
    | '/dashboard/conversations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AboutIndexRoute: typeof AboutIndexRoute
  ChatIndexRoute: typeof ChatIndexRoute
  DemoIndexRoute: typeof DemoIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/': {
      id: '/demo/'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/setup': {
      id: '/dashboard/setup'
      path: '/setup'
      fullPath: '/dashboard/setup'
      preLoaderRoute: typeof DashboardSetupRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/faqs': {
      id: '/dashboard/faqs'
      path: '/faqs'
      fullPath: '/dashboard/faqs'
      preLoaderRoute: typeof DashboardFaqsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/escalations': {
      id: '/dashboard/escalations'
      path: '/escalations'
      fullPath: '/dashboard/escalations'
      preLoaderRoute: typeof DashboardEscalationsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/conversations/': {
      id: '/dashboard/conversations/'
      path: '/conversations'
      fullPath: '/dashboard/conversations'
      preLoaderRoute: typeof DashboardConversationsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/conversations/$id': {
      id: '/dashboard/conversations/$id'
      path: '/conversations/$id'
      fullPath: '/dashboard/conversations/$id'
      preLoaderRoute: typeof DashboardConversationsIdRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardEscalationsRoute: typeof DashboardEscalationsRoute
  DashboardFaqsRoute: typeof DashboardFaqsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardSetupRoute: typeof DashboardSetupRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardConversationsIdRoute: typeof DashboardConversationsIdRoute
  DashboardConversationsIndexRoute: typeof DashboardConversationsIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardEscalationsRoute: DashboardEscalationsRoute,
  DashboardFaqsRoute: DashboardFaqsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardSetupRoute: DashboardSetupRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardConversationsIdRoute: DashboardConversationsIdRoute,
  DashboardConversationsIndexRoute: DashboardConversationsIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AboutIndexRoute: AboutIndexRoute,
  ChatIndexRoute: ChatIndexRoute,
  DemoIndexRoute: DemoIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
